{
  data_module: {
    type: map

    setup: {
      dataset_files: {
        train_data_path: "data/train_trx.parquet"
        test_data_path: "data/test_trx.parquet"
      }
      col_id: customer_id
      col_target: gender

      split_by: embeddings_validation
      fold_info: "conf/embeddings_validation.work/folds/folds.json"
    }

    train: {
        min_seq_len: 0
        random_slice: {
            min_len: 250
            max_len: 350
            rate_for_min: 0.9
        }
        trx_dropout: 0.01
        num_workers: 16
        batch_size: 32
    }

    valid: {
        max_seq_len: 1200
        num_workers: 8
        batch_size: 64   # 512
    }
  }

  embedding_validation_results: {
    model_name: nn
    feature_name: mles_finetuning
    output_path: "results/mles_finetuning_results.json"
  }

  seed_everything: 42
  trainer: {
    gpus: [0]
    auto_select_gpus: false

    max_epochs: 8

    checkpoint_callback: false
    deterministic: True
  }

  params: {
    device: cuda,

    score_metric: [auroc, accuracy]

    model_type: pretrained,
    pretrained: {
        model_path: "models/mles_model_for_finetuning.p"
        lr: 0.0001
        # lr: freeze
    }

    head: {
      pred_all_states: false
      pred_all_states_mean: false
      seq_encoder_before: true
      explicit_lengths: false,
      norm_input: true,
      use_batch_norm: true
      num_classes: 1
    },
    train: {
      random_neg: false,
      loss: bce,
      lr: 0.005,
      weight_decay: 0.0,
    },
    lr_scheduler: {
      step_size: 1,
      step_gamma: 0.60
    },
    norm_scores: false
  }
}
