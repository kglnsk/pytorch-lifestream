{
  include "dataset_map_file.hocon"

  include "dataset_inference_file.hocon"

  seed_everything: 42
  trainer: {
    gpus: [0]
    auto_select_gpus: false

    max_epochs: 150

    checkpoint_callback: false
    deterministic: True
  }


  params: {
    validation_metric_params: {
        K: 4
        metric: cosine
    }

    model_type: rnn,
    rnn: {
      type: gru,
      hidden_size: 1024,
      bidir: false,
      trainable_starter: static
    },
    use_normalization_layer : true,
    trx_encoder: {
      norm_embeddings: false,
      embeddings_noise: 0.003,
      embeddings: {
        mcc_code: {in: 200, out: 48},
        tr_type: {in: 100, out: 24}
      },
      numeric_values: {
        amount: identity
      }
    },
    lr_scheduler: {
      step_size: 10,
      step_gamma: 0.9025
    },
    train: {
      num_workers: 8,
      batch_size: 128,
      split_strategy: {
        split_strategy: SampleSlices,
        split_count: 5,
        cnt_min: 15,
        cnt_max: 75
      },
      sampling_strategy: HardNegativePair,
      trx_dropout: 0.01,
      max_seq_len: 1200,
      neg_count: 5,
      loss: ContrastiveLoss,
      margin: 0.5,
      lr: 0.002,
      weight_decay: 0.0
    },
    norm_scores: false,
    valid: {
      batch_size: 1024,
      num_workers: 16,
      split_strategy: {
        split_strategy: SampleSlices,
        split_count: 5,
        cnt_min: 25,
        cnt_max: 100
      },
      max_seq_len: 1200
    }
  },

  model_path: "models/mles_model.p"

  output: {
    path: "data/mles_embeddings"
    format: pickle
  }
}
