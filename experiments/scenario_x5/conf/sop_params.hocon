{
  data_module: {
    type: map
    setup: {
      col_id: client_id
      dataset_files: {
        data_path: "data/train_trx.parquet"
      }
      split_by: files
      valid_size: 0.05
      valid_split_seed: 42
    }
    train: {
      min_seq_len: 30
      split_strategy: {
        split_strategy: "SampleSlices"
        split_count: 4
        cnt_min: 60
        cnt_max: 360
      }
      augmentations: [
        [AllTimeShuffle, {}]
        [DropoutTrx, {trx_dropout: 0.01}]
      ]
      num_workers: 8
      batch_size: 128
    }
    valid: {
      split_strategy: {
        split_strategy: SampleSlices
        split_count: 4
        cnt_min: 30
        cnt_max: 180
      }
      augmentations: []
      num_workers: 16
      batch_size: 128
    }
  }

  seed_everything: 42
  trainer: {
    gpus: 1
    auto_select_gpus: false

    max_epochs: 10

    deterministic: True
  }
  logger_name: sop_model

  params: {
    data_module_name: SopDataModuleTrain
    pl_module_name: SopNspModule

    encoder_type: rnn,
    trx_encoder: {
      norm_embeddings: false,
      embeddings_noise: 0.003,
      embeddings: {
        level_3: {in: 200, out: 16},
        level_4: {in: 800, out: 16},
        segment_id: {in: 120, out: 16}
      },
      numeric_values: {
        trn_sum_from_iss: identity,
        netto: identity,
        regular_points_received: identity
      }
    },
    rnn: {
      type: gru,
      hidden_size: 800,
      bidir: false,
      trainable_starter: static
    },
    head: {
      hidden_size: 512,
      drop_p: 0.5,
      pred_all_states: false
    },

    lr_scheduler: {
      ReduceLROnPlateau: true,
      patience: 2
    },
    train: {
       lr: 0.002,
      weight_decay: 0.0,
    }
  }

  model_path: "models/sop_model.p"

  include "dataset_inference_file.hocon"

  output: {
    path: data/sop_embeddings,
    format: pickle,
  }
}
