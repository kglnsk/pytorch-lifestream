{
    environment: {
        work_dir: "embeddings_validation.work"
    }
    report_file: "../results/scenario_rosbank.txt"

    target: {
        file_name: "../data/train.csv"
        cols_id: [cl_id]
        cols_id_type: [int]
        col_target: target_flag
        drop_duplicated_ids: true
    }

    split: {
        fit_ids: true

        train_id: {
            file_name: "../data/train.csv"
            drop_duplicated_ids: true
        }
        test_id: {
            file_name: "../data/test_ids.csv"
        }

        cv_split_count: 5
        is_stratify: true
        random_state: 42
    }

    features: {
        baseline: {
            enabled: true
            read_params: {file_name: ../data/agg_feat_embed.pickle}
            target_options: {}
        }
        cpc_embeddings: {
            enabled: false
            read_params: {file_name: ../data/cpc_embeddings.pickle}
            target_options: {}
        }
        mles_embeddings: {
            enabled: false
            read_params: {file_name: ../data/mles_embeddings.pickle}
            target_options: {}
        }
    }

    external_scores: {
    }

    models: {
        linear: {
            enabled: true
            cls_name: sklearn.linear_model.LogisticRegression
            params: {},
            cpu_count: 1
            preprocessing: [
                [sklearn.preprocessing.MaxAbsScaler, {}]
            ]
        }
        lgbm: {
            enabled: true
            cls_name: lightgbm.LGBMClassifier,
            params: {
                n_estimators: 500
                boosting_type: gbdt
                objective: binary
                metric: auc
                subsample: 0.5
                subsample_freq: 1
                learning_rate: 0.02
                feature_fraction: 0.75
                max_depth: 6
                lambda_l1: 1
                lambda_l2: 1
                min_data_in_leaf: 50
                random_state: 42
                n_jobs: 8
                reg_alpha: null
                reg_lambda: null
                colsample_bytree: null
                min_child_samples: null
            },
            cpu_count: 8
            preprocessing: [
                [sklearn.preprocessing.MaxAbsScaler, {}]
            ]
        }
        xgb: {
            enabled: true
            cls_name: xgboost.XGBClassifier
            params: {
                n_jobs=4,
                seed=42,
                n_estimators=300,
            },
            cpu_count: 4
            preprocessing: [
                [sklearn.preprocessing.MaxAbsScaler, {}]
            ]
        }
    }

    metrics: {
        auroc: {
            enabled: true
            score_func: sklearn.metrics.roc_auc_score
            scorer_params: {needs_proba: true}

        }
        accuracy: {
            enabled: true
            score_func: sklearn.metrics.accuracy_score
            scorer_params: {needs_proba: false}
        }
    }

    report: {
        is_check_train: false
        error_handling: fail

        auroc: {float_format: "{:.3f}", baseline_key=["lgbm", "baseline"]}
        accuracy: {float_format: "{:.3f}", baseline_key=["lgbm", "baseline"]}

        cnt_features: {float_format: "{:.0f}", keep_columns: ["mean"]}
        cnt_samples: {float_format: "{:9,.0f}", keep_columns: ["mean"]}

        feature_load_time: {float_format: "{:,.1f}"}
        train_fit_transform_time: {float_format: "{:,.1f}"}
        feature_transform_time: {float_format: "{:,.1f}"}
        train_time: {float_format: "{:,.1f}"}
        auroc_score_time {float_format: "{:,.1f}"}
        accuracy_score_time: {float_format: "{:,.1f}"}

        feature_fit_info: {keep_columns: ["first"]}
    }
}